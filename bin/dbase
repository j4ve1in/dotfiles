#!/bin/zsh

typeset -g BLUE="34"
typeset -g RED_B="1;31;49"
typeset -g CYAN_B="1;36;49"
typeset -g UNDERLINE="4;39;49"
typeset -g COLOR_46_B="1;38;5;46;49"
typeset -g COLOR_75_B="1;38;5;75;49"
typeset -g COLOR_93_B="1;38;5;93;49"

has() { type $1 >/dev/null 2>&1; }

print() { printf "$@\n"; }

cprint() {
  typeset -r string="$1" color="\e[${2}m" reset="\e[0;39;49m"
  print "${color}${string}${reset}"
}

cprintf() {
  typeset -r string="$1" color="\e[${2}m" reset="\e[0;39;49m"
  printf "${color}${string}${reset}"
}

lprintf() {
  typeset -r MAIN_COLOR='\e[1;38;5;32;49m'
  typeset -r COLOR_RESET='\e[0;39;49m'
  typeset -r SUCCESS_COLOR='1;36;49'
  typeset -r ERROR_COLOR='1;31;49'
  typeset -r MSG="$1" CMD="${@:2}"
  ${=CMD} >/dev/null 2>&1 &
  while :; do
    jobs %1 > /dev/null 2>&1 || break
    printf "\r%s${MAIN_COLOR}%s${COLOR_RESET}" "${MSG}" ".  "
    sleep 0.7
    jobs %1 > /dev/null 2>&1 || break
    printf "\r%s%s${MAIN_COLOR}%s${COLOR_RESET}" "${MSG}" "." ". "
    sleep 0.7
    jobs %1 > /dev/null 2>&1 || break
    printf "\r%s%s${MAIN_COLOR}%s${COLOR_RESET}" "${MSG}" ".." "."
    sleep 0.7
  done
  if wait $!; then
    printf "\r${MSG}..."
    cprint 'done' "$SUCCESS_COLOR"
    return 0
  else
    printf "\r${MSG}..."
    cprint 'error' "$ERROR_COLOR"
    return 1
  fi
}
