#!/bin/zsh

typeset -g D{ROOT,REPO,AUTHOR,LICENSE}
: ${DROOT:=~/.files}
: ${DREPO:=https://github.com/ytet5uy4/dotfiles}
: ${DAUTHOR:=ytet5uy4}
: ${DLICENSE:=MIT}

typeset -grA fg=(
  main      '\e[1;38;5;32;49m'
  sub1      '\e[1;38;5;75;49m'
  sub2      '\e[90m'
  success   '\e[1;36;49m'
  error     '\e[1;31;49m'
  underline '\e[4;39;49m'
  reset     '\e[0;39;49m'
)

typeset -gA opt
while (( $# > 0 )); do
  case "$1" in
    -*)
      [[ "$1" =~ 'f' ]] && opt[full]='1'
      [[ "$1" =~ 'y' ]] && opt[yes]='1'
      [[ "$1" =~ 'p' ]] && opt[plugin]='1'
      [[ "$1" =~ 'P' ]] && opt[provision]='1'
      shift
      ;;
    *) shift ;;
  esac
done

main() {
  (( $opt[plugin] )) && install_plugin && exit 0
  print_header
  install
}

print_header() {
  clear
  printf  "\n$fg[main]"
  echo    '          __        __   ____ __ __              '
  echo    '     ____/ /____   / /_ / __//_// /___   _____   '
  echo    '    / __  // __ \ / __// /_ / // // _ \ / ___/   '
  echo    '   / /_/ // /_/ // /_ / __// // //  __//__  /    '
  echo    '   \__,_/ \____/ \__//_/  /_//_/ \___//____/     '
  printf  "$fg[reset]\n"

  cprint  "           $DREPO   \n" "$fg[sub2]"
  cprintf '   Author: '            "$fg[sub1]"; printf 'ytet5uy4'
  cprintf '   License: '           "$fg[sub1]"; echo   'MIT'
  cprintf '   Provisioning: '      "$fg[sub1]"
  (( $opt[provision] )) && cprint 'enable' "$fg[main]" || print 'disable'
  cprintf '   Full Installation: ' "$fg[sub1]"
  (( $opt[full] )) && cprint 'enable' "$fg[main]" || print 'disable'
  cprintf '   Option Assume yes: ' "$fg[sub1]"
  (( $opt[yes] )) && cprint 'enable' "$fg[main]" || print 'disable'
  echo

  ! (( $opt[yes] )) && warning
}

warning() {
  echo '   If the file exists, it will be ruthlessly clobbered'
  printf '   Are you sure you want to continue (yes/no)? '
  read -q ANSWER; echo "\n"
  case $ANSWER in
    'Y' | 'y' ) install ;;
    * ) exit 0 ;;
  esac
}

install() {
  # Provisioning
  (( $opt[provision] )) && provisioning

  # Download
  download

  path=($path $DROOT/bin(N-/))

  # Backup and Deploy
  dbackup && ddeploy

  # Install plugin
  (( $opt[full] )) && install_plugin

  # Restart
  (( $opt[yes] )) && restart || restart_message
}

provisioning() {
  typeset ANSIBLE_DREPO tempdir
  ANSIBLE_DREPO='https://github.com/ytet5uy4/ansible-dotfiles/tarball/master'
  tempdir=`mktemp -d /tmp/dotfiles-XXXXXX`

  cprint "Provision for installing dotfiles" $fg[underline]
  echo ' Download playbook of ansible for dotfiles'
  curl -sL $ANSIBLE_DREPO | tar xzC $tempdir --strip=1
  cprintf '  Repository: ' "$fg[sub1]"
  echo "$ANSIBLE_DREPO"
  cprintf '  Directory: ' "$fg[sub1]"
  echo $tempdir
  lprintf ' Download playbook of ansible for dotfiles' "ansible-playbook $tempdir/site.yml"
  echo
}

download() {
  cprint "Download dotfiles" $fg[underline]
  if lprintf ' Checking git command' 'type git'; then
    cprintf '  Use: ' "$fg[sub1]"
    type -a git | tail -n 1 | awk '{print $3}'
  else
    echo ' Please install git or update your path to run git command'
    exit 1
  fi

  lprintf ' Downloading dotfiles' "git clone --depth 1 $DREPO $DROOT"
  cprintf '  Repository: ' "$fg[sub1]"
  echo "$DREPO"
  cprintf '  Directory: ' "$fg[sub1]"
  echo "$DROOT"
  echo
}

restart_message() {
  printf "Do you want to restart shell (yes/no)? "
  read -q ANSWER; echo
  case $ANSWER in
    "Y" | "y" ) restart ;;
    * ) exit 0 ;;
  esac
}

restart() { clear; exec $SHELL -l; }

install_plugin() {
  cprint "Install plugin" $fg[underline]

  typeset -ar NAME=('Dein' 'Zplug' 'TPM')

  lprintf " Downloading ${NAME[*]}" 'download_plugin'
  echo
}

download_plugin() {
  typeset -ar REPO=('Shougo/dein.vim' 'zplug/zplug' 'tmux-plugins/tpm')
  typeset -r GITHUB_URL='https://github.com/'
  typeset -ar DIR=(
    "$HOME/.vim/bundle/repos/github.com/Shougo/dein.vim"
    "$HOME/.zsh/bundle/zplug"
    "$HOME/.tmux/bundle/tpm"
  )
  paste -d ' ' <(printf "%s\n" "${REPO[@]}") <(printf "%s\n" "${DIR[@]}") \
    | sed -e "s|^|${GITHUB_URL}|g" \
    | xargs -L 1 -n 2 -P "${#REPO[*]}" git clone >/dev/null 2>&1
}

print() { printf "$@\n"; }

cprint() { print "${2}${1}${fg[reset]}"; }

cprintf() { printf "${2}${1}${fg[reset]}"; }

lprintf() {
  typeset -r MSG="$1" CMD="${@:2}"
  ${=CMD} >/dev/null 2>&1 &
  while :; do
    jobs %% > /dev/null 2>&1 || break
    printf "\r%s${fg[main]}%s${fg[reset]}" "${MSG}" ".  "
    sleep 0.7
    jobs %% > /dev/null 2>&1 || break
    printf "\r%s%s${fg[main]}%s${fg[reset]}" "${MSG}" "." ". "
    sleep 0.7
    jobs %% > /dev/null 2>&1 || break
    printf "\r%s%s${fg[main]}%s${fg[reset]}" "${MSG}" ".." "."
    sleep 0.7
  done
  if wait $!; then
    printf "\r${MSG}..."
    cprint 'done' "$fg[success]"
    return 0
  else
    printf "\r${MSG}..."
    cprint 'error' "$fg[error]"
    return 1
  fi
}

main
