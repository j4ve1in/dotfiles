#!/bin/zsh

typeset -g DROOT=~/.dotfiles
typeset -g DREPO='https://github.com/ytet5uy4/dotfiles'

main() {
  check_opt $@
  set_color_var
  [ "$PLUGIN_INSTALLATION" = "1" ] && install_plugin && exit 0
  print_header
  install
}

check_opt() {
  while (( $# > 0 )); do
    case "$1" in
      -*)
        [[ "$1" =~ 'f' ]] && typeset -gr FULL_INSTALLATION='1'
        [[ "$1" =~ 'y' ]] && typeset -gr ASSUME_YES='1'
        [[ "$1" =~ 'p' ]] && typeset -gr PLUGIN_INSTALLATION='1'
        [[ "$1" =~ 'P' ]] && typeset -gr PROVISIONING='1'
        shift
        ;;
      *) shift ;;
    esac
  done
}

set_color_code() { echo "\e[${1}m"; }

set_color_var() {
  typeset -g MAIN_COLOR="$(set_color_code '1;38;5;32;49')"
  typeset -g SUB_COLOR="$(set_color_code '1;38;5;75;49')"
  typeset -g SUCCESS_COLOR="$(set_color_code '1;36;49')"
  typeset -g ERROR_COLOR="$(set_color_code '1;31;49')"
  typeset -g UNDERLINE="$(set_color_code '4;39;49')"
  typeset -g DARKGRAY="$(set_color_code '90')"
  typeset -g COLOR_RESET="$(set_color_code '0;39;49')"
}

print_header() {
  clear
  printf "\n$MAIN_COLOR"
  echo '          __        __   ____ __ __              '
  echo '     ____/ /____   / /_ / __//_// /___   _____   '
  echo '    / __  // __ \ / __// /_ / // // _ \ / ___/   '
  echo '   / /_/ // /_/ // /_ / __// // //  __//__  /    '
  echo '   \__,_/ \____/ \__//_/  /_//_/ \___//____/     '
  printf "$COLOR_RESET\n"
  cprint '           $DREPO   \n' "$DARKGRAY"
  cprintf '   Author: '  "$SUB_COLOR"; printf 'ytet5uy4'
  cprintf '   License: ' "$SUB_COLOR"; echo   'MIT'
  cprintf '   Provisioning: ' "$SUB_COLOR"
  [ "$PROVISIONING" = "1" ] && cprint 'enable' "$MAIN_COLOR" || print 'disable'
  cprintf '   Full Installation: ' "$SUB_COLOR"
  [ "$FULL_INSTALLATION" = "1" ] && cprint 'enable' "$MAIN_COLOR" || print 'disable'
  cprintf '   Option Assume yes: ' "$SUB_COLOR"
  [ "$ASSUME_YES" = "1" ] && cprint 'enable' "$MAIN_COLOR" || print 'disable'
  echo
  [ "$ASSUME_YES" != "1" ] && warning
}

warning() {
  echo '   If the file exists, it will be ruthlessly clobbered'
  printf '   Are you sure you want to continue (yes/no)? '
  read -q ANSWER; echo "\n"
  case $ANSWER in
    'Y' | 'y' ) install ;;
    * ) exit 0 ;;
  esac
}

install() {
  # Provisioning
  [ "$PROVISIONING" = "1" ] && provisioning

  # Download
  download

  path=($path $DROOT/bin(N-/))

  # Backup and Deploy
  dbackup && ddeploy

  # Install plugin
  [ "$FULL_INSTALLATION" = "1" ] && install_plugin

  # Restart
  [ "$ASSUME_YES" = "1" ] && restart || restart_message
}

provisioning() {
  cprint "Provision for installing dotfiles" $UNDERLINE
  typeset -r ANSIBLE_DREPO='https://github.com/ytet5uy4/ansible-dotfiles/tarball/master'
  typeset tempdir=`mktemp -d /tmp/dotfiles-XXXXXX`
  echo ' Download playbook of ansible for dotfiles'
  curl -sL $ANSIBLE_DREPO | tar xzC $tempdir --strip=1
  cprintf '  Repository: ' "$SUB_COLOR"
  echo "$ANSIBLE_DREPO"
  cprintf '  Directory: ' "$SUB_COLOR"
  echo $tempdir
  lprintf ' Download playbook of ansible for dotfiles' "ansible-playbook $tempdir/site.yml"
  echo
}

download() {
  cprint "Download dotfiles" $UNDERLINE
  if lprintf ' Checking git command' 'type git'; then
    cprintf '  Use: ' "$SUB_COLOR"
    type -a git | tail -n 1 | awk '{print $3}'
  else
    echo ' Please install git or update your path to run git command'
    exit 1
  fi

  lprintf ' Downloading dotfiles' "git clone --depth 1 $DREPO $DROOT"
  cprintf '  Repository: ' "$SUB_COLOR"
  echo "$DREPO"
  cprintf '  Directory: ' "$SUB_COLOR"
  echo "$DROOT"
  echo
}

restart_message() {
  printf "Do you want to restart shell (yes/no)? "
  read -q ANSWER; echo
  case $ANSWER in
    "Y" | "y" ) restart ;;
    * ) exit 0 ;;
  esac
}

restart() { clear; exec $SHELL -l; }

install_plugin() {
  cprint "Install plugin" $UNDERLINE

  typeset -ar NAME=('Dein' 'Zplug' 'TPM')

  lprintf " Downloading ${NAME[*]}" 'download_plugin'
  echo
}

download_plugin() {
  typeset -ar REPO=('Shougo/dein.vim' 'zplug/zplug' 'tmux-plugins/tpm')
  typeset -r GITHUB_URL='https://github.com/'
  typeset -ar DIR=(
    "$HOME/.vim/bundle/repos/github.com/Shougo/dein.vim"
    "$HOME/.zsh/bundle/zplug"
    "$HOME/.tmux/bundle/tpm"
  )
  paste -d ' ' <(printf "%s\n" "${REPO[@]}") <(printf "%s\n" "${DIR[@]}") \
    | sed -e "s|^|${GITHUB_URL}|g" \
    | xargs -L 1 -n 2 -P "${#REPO[*]}" git clone >/dev/null 2>&1
}

print() { printf "$@\n"; }

cprint() { print "${2}${1}${COLOR_RESET}"; }

cprintf() { printf "${2}${1}${COLOR_RESET}"; }

lprintf() {
  typeset -r MSG="$1" CMD="${@:2}"
  ${=CMD} >/dev/null 2>&1 &
  while :; do
    jobs %% > /dev/null 2>&1 || break
    printf "\r%s${MAIN_COLOR}%s${COLOR_RESET}" "${MSG}" ".  "
    sleep 0.7
    jobs %% > /dev/null 2>&1 || break
    printf "\r%s%s${MAIN_COLOR}%s${COLOR_RESET}" "${MSG}" "." ". "
    sleep 0.7
    jobs %% > /dev/null 2>&1 || break
    printf "\r%s%s${MAIN_COLOR}%s${COLOR_RESET}" "${MSG}" ".." "."
    sleep 0.7
  done
  if wait $!; then
    printf "\r${MSG}..."
    cprint 'done' "$SUCCESS_COLOR"
    return 0
  else
    printf "\r${MSG}..."
    cprint 'error' "$ERROR_COLOR"
    return 1
  fi
}

main $@
