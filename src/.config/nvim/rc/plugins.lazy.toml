[[plugins]]
repo = 'shime/vim-livedown'
on_ft = 'markdown'
hook_add = '''
augroup livedown
  autocmd!
  autocmd FileType markdown nmap <silent> gm :<C-u>LivedownToggle<CR>
augroup END
'''

[[plugins]]
repo = 'tyru/open-browser.vim'
on_map = '<Plug>(openbrowser-smart-search)'
hook_add = '''
let g:netrw_nogx = 1
nmap gx <Plug>(openbrowser-smart-search)
vmap gx <Plug>(openbrowser-smart-search)
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_i = 1
hook_source = '''
let g:deoplete#enable_at_startup = 1
let g:deoplete#enable_smart_case = 1
let g:deoplete#max_list = 5

inoremap <expr><C-h> deoplete#smart_close_popup()."\<C-h>"
inoremap <expr><BS>  deoplete#smart_close_popup()."\<C-h>"

inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
function! s:my_cr_function() abort
  return deoplete#close_popup() . "\<CR>"
endfunction
'''

[[plugins]]
repo = 'zchee/deoplete-go'
build = 'make'
on_ft = 'go'

[[plugins]]
repo = 'Shougo/neosnippet'
on_map = '<Plug>(neosnippet_expand_'
hook_add = '''
" Plugin key-mappings.
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)

" SuperTab like snippets behavior.
imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
      \ "\<Plug>(neosnippet_expand_or_jump)"
      \: pumvisible() ? "\<C-n>" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
      \ "\<Plug>(neosnippet_expand_or_jump)"
      \: "\<TAB>"

let g:neosnippet#disable_runtime_snippets = {'_' : 1}
let g:neosnippet#snippets_directory = '~/.config/nvim/snippets'
'''

[[plugins]]
repo = 'tyru/caw.vim'
on_map = '<Plug>(caw:hatpos:toggle)'
hook_add = '''
nmap <C-_> <Plug>(caw:hatpos:toggle)
vmap <C-_> <Plug>(caw:hatpos:toggle)
'''

[[plugins]]
repo = 'fatih/vim-hclfmt'
on_ft = 'hcl'
hook_add = '''
let g:hcl_fmt_autosave = 0
let g:tf_fmt_autosave = 0
let g:nomad_fmt_autosave = 0
augroup hclfmt
  autocmd!
  autocmd FileType hcl nnoremap = :<C-u>HclFmt<CR>
augroup END
'''

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'
hook_add ='''
augroup vim-json
  autocmd!
  autocmd FileType json let g:vim_json_syntax_conceal = 0
augroup END
'''

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'digitaltoad/vim-pug'
on_ft = ['pug', 'vue']

[[plugins]]
repo = 'hashivim/vim-terraform'
on_ft = 'tf'
hook_add = '''
let g:terraform_fmt_on_save = 1
augroup vim-terraform
  autocmd!
  autocmd FileType terraform nnoremap = :<C-u>TerraformFmt<CR>
augroup END
'''

[[plugins]]
repo = 'baskerville/vim-sxhkdrc'
on_ft = 'sxhkdrc'

[[plugins]]
repo = 'posva/vim-vue'
on_ft = 'vue'

[[plugins]]
repo = 'dag/vim-fish'
on_ft = 'fish'

[[plugins]]
repo = 'b4b4r07/vim-hcl'
